################################################################################
#                                                                              #
#      IAR Universal Linker V4.59Y/386                                         #
#                                                                              #
#           Link time     =  15/May/2007  16:24:26                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  C:\iarprojects\eZxmit\Debug\List\eZxmit.map       #
#           Output file 1 =  C:\iarprojects\eZxmit\Debug\Exe\eZxmit.d43        #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  C:\iarprojects\eZxmit\Debug\Obj\SD16_IrTx.r43     #
#                            -o C:\iarprojects\eZxmit\Debug\Exe\eZxmit.d43     #
#                            -l C:\iarprojects\eZxmit\Debug\List\eZxmit.map    #
#                            -xmsni                                            #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.0\430\LIB\"                                   #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0\430\CONFIG\lnk430F2013.xcl"                   #
#                            (-cmsp430                                         #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,HEAP+_HEAP_SIZ #
#                            E=0200-027F                                       #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CODE)INFO=1000-10FF -Z(CODE)INFOA=10C0-10FF    #
#                            -Z(CODE)INFOB=1080-10BF -Z(CODE)INFOC=1040-107F   #
#                            -Z(CODE)INFOD=1000-103F                           #
#                            -Z(CODE)CSTART=F800-FFDF -Z(CODE)CODE=F800-FFDF   #
#                            -Z(CONST)DATA16_C,DATA16_ID,DIFUNCT,CHECKSUM=F800 #
#                            -FFDF                                             #
#                            -Z(CONST)INTVEC=FFE0-FFFF                         #
#                            -Z(CONST)RESET=FFFE-FFFF) -D_STACK_SIZE=32 -rt    #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0\430\LIB\CLIB\cl430f.r43"                      #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read -D_HEAP_SIZE=0     #
#                            -s __program_start                                #
#                                                                              #
#                        Copyright 1987-2006 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           F806  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __core        = 64kb
  __double_size = 32
  __pic         = no
  __reg_r4      = free
  __reg_r5      = free
  __rt_version  = 2



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _HEAP_SIZE              0000 
           _STACK_SIZE             0032 
    *************************************************************************

  FILE NAME : C:\iarprojects\eZxmit\Debug\Obj\SD16_IrTx.r43
  PROGRAM MODULE, NAME : SD16_IrTx

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0056 - 0056 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DCOCTL                  0056 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0057 - 0057 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL1                 0057 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0058 - 0058 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL2                 0058 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0053 - 0053 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL3                 0053 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0021 - 0021 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1OUT                   0021 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0022 - 0022 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   0022 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0026 - 0026 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   0026 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0029 - 0029 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2OUT                   0029 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002A - 002A (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   002A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 002E - 002E (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   002E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00B0 - 00B0 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SD16INCTL0              00B0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00B7 - 00B7 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SD16AE                  00B7 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0100 - 0101 (0x2 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SD16CTL                 0100 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0102 - 0103 (0x2 bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SD16CCTL0               0102 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0112 - 0113 (0x2 bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SD16MEM0                0112 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 012E - 012F (0x2 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TAIV                    012E 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0160 - 0161 (0x2 bytes), align: 0
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACTL                   0160 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0162 - 0163 (0x2 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCTL0                 0162 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0164 - 0165 (0x2 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCTL1                 0164 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0172 - 0173 (0x2 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCR0                  0172 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0174 - 0175 (0x2 bytes), align: 0
  Segment part 21. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCR1                  0174 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FE - 10FE (0x1 bytes), align: 0
  Segment part 23. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALDCO_1MHZ             10FE 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FF - 10FF (0x1 bytes), align: 0
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALBC1_1MHZ             10FF 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 00BF - 00BF (0x1 bytes), align: 0
  Segment part 25. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SDA2_BUG_FIX            00BF 
    -------------------------------------------------------------------------
DATA16_N
  Relative segment, address: 0200 - 0201 (0x2 bytes), align: 1
  Segment part 30.            Intra module refs:   IR_ISR
                                                   IR_Tx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IR_tmp                  0200 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: F812 - F84D (0x3c bytes), align: 1
  Segment part 32.            Intra module refs:   IR_Packet
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IR_Tx                   F812 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: F84E - F87B (0x2e bytes), align: 1
  Segment part 38.            Intra module refs:   IR_ISR::??INTVEC 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IR_ISR                  F84E 
               interrupt function
               stack 1 = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: F87C - F8B7 (0x3c bytes), align: 1
  Segment part 33.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IR_Packet               F87C 
               calls direct
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: F8B8 - F8D5 (0x1e bytes), align: 1
  Segment part 34.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Get_Sd16                F8B8 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: F8D6 - F8DD (0x8 bytes), align: 1
  Segment part 37.            Intra module refs:   SD16ISR::??INTVEC 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SD16ISR                 F8D6 
               interrupt function
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: F8DE - F92D (0x50 bytes), align: 1
  Segment part 35.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init                    F8DE 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: F92E - F991 (0x64 bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    F92E            Segment part 12 (?cstart)
               calls direct
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: F992 - F9A7 (0x16 bytes), align: 1
  Segment part 31.            Intra module refs:   Timer_A1::??INTVEC 16
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer_A1                F992 
               interrupt function
               stack 1 = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFEB (0xc bytes), align: 1
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SD16ISR::??INTVEC 10    FFEA 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFF1 (0x12 bytes), align: 1
  Segment part 27. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer_A1::??INTVEC 16   FFF0 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFF3 (0x14 bytes), align: 1
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IR_ISR::??INTVEC 18     FFF2 
    -------------------------------------------------------------------------
CSTACK
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 4.0\430\LIB\CLIB\cl430f.r43
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: F800, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   F800            exit (?clibexit)
    -------------------------------------------------------------------------
CSTART
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_dtors     
    -------------------------------------------------------------------------
CSTART
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_closeall       
    -------------------------------------------------------------------------
CSTART
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F800 - F803 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?clibexit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: F9A8 - F9AB (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    F9A8            Segment part 12 (?cstart)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?clibstubs

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors            
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_dtors            
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Close_all              
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: F804 - F805 (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  F804            Segment part 5 (?_exit)
                                                   _exit (?_exit)
           ?C_EXIT                 F804 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 6 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
HEAP
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Relative segment, address: 024E, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_I
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_C
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F806 - F809 (0x4 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         F806            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           F806 
    -------------------------------------------------------------------------
CSTART
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_low_level_init
                                   
    -------------------------------------------------------------------------
CSTART
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       
    -------------------------------------------------------------------------
CSTART
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       
    -------------------------------------------------------------------------
DIFUNCT
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_ctors      
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F80A - F811 (0x8 bytes), align: 1
  Segment part 12.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       F80A 
           ?cstart_end             F812 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : lowinit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memmove

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memmove                 
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memmove        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?setjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setjmp                  
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r5              
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r4              
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_end             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?longjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           longjmp                 
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r5             
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r4             
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_end            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SwitchKey16

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SwitchKey16            




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA      CONST
------               ----      ----      -----
                    (Rel)  (Rel)  (Abs)  (Rel)
?__exit                 2
?_exit                  4
?clibexit               4
?cstart                12
?reset_vector                                2
SD16_IrTx             406      2     35
  + common                                  20
N/A (command line)            50
----------            ---     --     --     --
Total:                428     52     35      2
  + common                                  20


                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0021 - 0022               2   rel    0
                                       0026 - 0026               1 
                                       0029 - 002A               2 
                                       002E - 002E               1 
                                       0053 - 0053               1 
                                       0056 - 0058               3 
                                       00B0 - 00B0               1 
                                       00B7 - 00B7               1 
                                       00BF - 00BF               1 
                                       0100 - 0103               4 
                                       0112 - 0113               2 
                                       0120 - 0121               2 
                                       012E - 012F               2 
                                       0160 - 0165               6 
                                       0172 - 0175               4 
DATA16_Z                                  0200                       dse    0
DATA16_I                                  0200                       dse    0
DATA16_N                               0200 - 0201               2   rel    1
CSTACK                                 024E - 027F              32   rel    1
DATA16_AN                              10FE - 10FF               2   rel    0
CSTART                                 F800 - F811              12   rel    1
CODE                                   F812 - F9AB             19A   rel    1
INTVEC                                 FFE0 - FFF3              14   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 428 bytes of CODE  memory
  52 bytes of DATA  memory (+ 35 absolute )
  22 bytes of CONST memory

Errors: none
Warnings: none

